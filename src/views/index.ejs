<div class="container py-3 py-md-4">
  <div class="row gy-4">
    <!-- Voting section -->
    <div class="col-lg-8 order-1 order-lg-1">
      <div class="rotation-notice">
        <div class="rotation-notice-content">
          <i class="fas fa-mobile-alt fa-rotate-90 me-2"></i>
          Turn your phone for a better experience
          <button
            type="button"
            class="btn-close btn-sm ms-2"
            aria-label="Close"
          ></button>
        </div>
      </div>
      <% if (hasCards) { %>
      <div class="explanation-text">
        Click on the card with the artwork you find most appealing. The winner
        ranks up.
      </div>

      <div
        class="d-flex flex-column flex-sm-row justify-content-center align-items-center"
      >
        <div class="voting-container mb-4 mb-sm-4 mb-0">
          <%- include('components/card', {card: cards[0], pairId:
          locals.pairId}) %>
        </div>

        <!-- VS Badge -->
        <div
          class="vs-badge-container d-flex justify-content-center align-items-center"
        >
          <div class="vs-badge">VS</div>
        </div>

        <div class="voting-container mb-4 mb-sm-4 mb-0">
          <%- include('components/card', {card: cards[1], pairId:
          locals.pairId}) %>
        </div>
      </div>
      <% } else { %>
      <div class="alert alert-info">
        <h4 class="alert-heading">No Cards Available</h4>
        <p>The database is currently empty. Please contac and admin.</p>
      </div>
      <% } %>
    </div>

    <!-- Rankings section -->
    <div class="rankings col-lg-4 order-2 order-lg-2 mb-lg-0 mx-3 mx-lg-0">
      <div class="card">
        <div class="card-header">
          <h2 class="h5 mb-0">Top 10 card art</h2>
        </div>
        <div class="card-body p-0">
          <% if (topRankings && topRankings.length > 0) { %>
          <ul class="list-group list-group-flush">
            <% topRankings.forEach((card, index) => { %>
            <li class="list-group-item d-flex align-items-center">
              <span class="fw-bold text-end" style="min-width: 28px"
                ><%= index + 1 %>.</span
              >

              <!-- Wrap the content in a link to Scryfall -->
              <a
                href="https://scryfall.com/card/<%= card.scryfallId %>"
                class="d-flex align-items-center text-decoration-none flex-grow-1"
                target="_blank"
                rel="noopener noreferrer"
              >
                <div class="card-thumbnail-container">
                  <img
                    src="<%= getArtCropUrl(card.scryfallId) %>"
                    alt="<%= card.name %>"
                    class="ms-2 me-2 rounded"
                    style="width: 40px; height: 40px; object-fit: cover"
                    onerror="this.onerror=null; this.src='/api/card-back-thumb';"
                  />
                  <img
                    src="<%= getCardUrl(card.scryfallId) %>"
                    alt="<%= card.name %>"
                    class="card-full-preview"
                    loading="lazy"
                  />
                </div>
                <div class="flex-grow-1">
                  <div
                    class="fw-medium text-start text-dark"
                    title="<%= card.name %>"
                  >
                    <%= card.name %>
                  </div>
                </div>
              </a>
            </li>
            <% }) %>
          </ul>
          <% } else { %>
          <p class="p-3 text-center">
            No rankings available yet.<br />Start voting to see cards here!
          </p>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Get all voting cards
    const cards = document.querySelectorAll(".voting-card");
    let voteInProgress = false;

    // Simple click handler for each card
    cards.forEach((card) => {
      card.addEventListener("click", function () {
        // Prevent multiple clicks
        if (voteInProgress) {
          return;
        }

        voteInProgress = true;
        const selectedCardId = this.dataset.cardId;

        // INSTANT FEEDBACK - Apply immediately on click
        this.classList.add("card-clicked");

        // Find the other card
        let otherCardId = null;
        let otherCardElement = null;
        cards.forEach((c) => {
          if (c.dataset.cardId !== selectedCardId) {
            otherCardId = c.dataset.cardId;
            otherCardElement = c;
            // Dim the unselected card instantly
            c.classList.add("card-unselected");
          }
        });

        // Visual feedback - disable all cards
        cards.forEach((c) => {
          c.classList.add("disabled");
          c.style.pointerEvents = "none";
        });

        // Submit vote via API
        fetch("/api/vote", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            selectedCardId: selectedCardId,
            cardId: otherCardId,
            pairId: "<%= locals.pairId %>",
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            // Create and show arrow badges
            const winnerBadge = document.createElement("div");
            winnerBadge.className = "rating-badge winner";
            winnerBadge.innerHTML = '<i class="fas fa-arrow-up"></i>';
            this.appendChild(winnerBadge);

            const loserBadge = document.createElement("div");
            loserBadge.className = "rating-badge loser";
            loserBadge.innerHTML = '<i class="fas fa-arrow-down"></i>';
            otherCardElement.appendChild(loserBadge);

            // Quick transition to next pair
            setTimeout(() => {
              window.location.href = "/";
            }, 800); // Reduced from 1500ms to 800ms for snappier experience
          })
          .catch((error) => {
            console.error("Error:", error);
            alert("Error submitting vote. Please try again.");

            // Re-enable cards if there's an error
            voteInProgress = false;
            cards.forEach((c) => {
              c.classList.remove("disabled", "card-unselected", "card-clicked");
              c.style.pointerEvents = "auto";
            });
          });
      });
    });
  });
</script>
